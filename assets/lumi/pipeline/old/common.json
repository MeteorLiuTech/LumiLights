{
	programs: [
		{
			// utility, does what it says on the tin
			name: "copy",
			vertexSource: "lumi:shaders/post/simple.vert",
			fragmentSource: "lumi:shaders/post/copy.frag",
			samplers: ["u_input"]
		},
	],

	images: [
		// attached as secondary in managed draws to capture emissive layer
		{
			name: "emissive_solid",
			lod: 0,
			internalFormat: "GL_R8",
			pixelFormat: "GL_RED",
			pixelDataType: "UNSIGNED_BYTE",
			target: "TEXTURE_2D",
			texParams: [
				{name: "TEXTURE_MIN_FILTER", val: "LINEAR"},
				{name: "TEXTURE_MAG_FILTER", val: "LINEAR"},
				{name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"},
				{name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"}
			]
		},
		{
			name: "emissive_translucent",
			lod: 0,
			internalFormat: "GL_R8",
			pixelFormat: "GL_RED",
			pixelDataType: "UNSIGNED_BYTE",
			target: "TEXTURE_2D",
			texParams: [
				{name: "TEXTURE_MIN_FILTER", val: "LINEAR"},
				{name: "TEXTURE_MAG_FILTER", val: "LINEAR"},
				{name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"},
				{name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"}
			]
		},
		{
			name: "emissive_composite",
			lod: 0,
			internalFormat: "GL_R8",
			pixelFormat: "GL_RED",
			pixelDataType: "UNSIGNED_BYTE",
			target: "TEXTURE_2D",
			texParams: [
				{name: "TEXTURE_MIN_FILTER", val: "LINEAR"},
				{name: "TEXTURE_MAG_FILTER", val: "LINEAR"},
				{name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"},
				{name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"}
			]
		},
		{
			name: "emissive_reflection_solid",
			lod: 0,
			internalFormat: "GL_R8",
			pixelFormat: "GL_RED",
			pixelDataType: "UNSIGNED_BYTE",
			target: "TEXTURE_2D",
			texParams: [
				{name: "TEXTURE_MIN_FILTER", val: "LINEAR"},
				{name: "TEXTURE_MAG_FILTER", val: "LINEAR"},
				{name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"},
				{name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"}
			]
		},
		{
			name: "emissive_reflection_translucent",
			lod: 0,
			internalFormat: "GL_R8",
			pixelFormat: "GL_RED",
			pixelDataType: "UNSIGNED_BYTE",
			target: "TEXTURE_2D",
			texParams: [
				{name: "TEXTURE_MIN_FILTER", val: "LINEAR"},
				{name: "TEXTURE_MAG_FILTER", val: "LINEAR"},
				{name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"},
				{name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"}
			]
		},
		{
			name: "main_copy",
			lod: 0,
			internalFormat: "RGBA8",
			target: "TEXTURE_2D",
			texParams: [
				// nearest because don't want filtering when copy back from main
				{name: "TEXTURE_MIN_FILTER", val: "NEAREST"},
				{name: "TEXTURE_MAG_FILTER", val: "NEAREST"},
				{name: "TEXTURE_WRAP_S", val: "CLAMP_TO_EDGE"},
				{name: "TEXTURE_WRAP_T", val: "CLAMP_TO_EDGE"}
			]
		}
	]
}
